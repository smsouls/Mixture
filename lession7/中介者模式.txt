中介者模式

应用场景：类中使用其他的类回导致类之间的关系紧密，修改一个类以后很容易出现
问题，类之间通过中介者进行关联的话就能做到类与类之间的松耦合。

角色：
1.Mediator:抽象中介者
2.ConcreteMediator:具体中介者
3.Colleague:抽象同事类
4.ConcreteColleague:具体的同事类

abstract class Colleague
{
	int number;
	int getNumber()
	{
		return number;
	}

	public void setNumber(int number)
	{
		number = number;
	}

	public abstract void setNumber(int number, Mediator am);
}

class ConcreteColleagueA extends Colleague
{
	public void setNumber(int number, Mediator am)
	{
		number = number;
		am.AaffectB();
	}
}

class ConcreteColleagueB extends Colleague
{
	public void setNumber(int number, Mediator am)
	{
		number = number;
		am.BaffectA();
	}
}

abstract class Mediator
{
	Colleague A;
	Colleague B;

	void AaffectB();
	void BaffectA();
}

class ConcreteMediator
{
	void AaffectB()
	{

	}

	void BaffectA()
	{
	
	}
}
