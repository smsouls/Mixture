机器学习

----------------------------------------------------------------------------------------------------------------

监督学习
输入的数据被称为“训练数据”，每组训练数据有一个明确的标识或结果，如对防垃圾邮件系统中“垃圾邮件”“非垃圾邮件”。在建立预测模型的时候，监督
式学习建立一个学习过程，将预测结果与“训练数据”的实际结果进行比较，不断的调整预测模型，直到模型的预测结果达到一个预期的准确率。
应用场景：
分类问题、回归问题
常见算法：
逻辑回归、反向传递神经网络

----------------------------------------------------------------------------------------------------------------

非监督学习
数据并不被特别标识，学习模型是为了推断出数据的一些内在结构。
应用场景：
关联规则的学习、聚类
常见算法：
Apriori、K-Means

----------------------------------------------------------------------------------------------------------------

半监督式学习
输入数据部分被标识，部分没有被标识，这种学习模型可以用来进行预测，但是模型首先需要学习数据的内在结构以便合理的组织数据来进行预测。
应用场景：
分类问题、回归问题。算法包括对一些常用监督式学习算法的延伸，这些算法首先试图对未标识数据进行建模，在此基础上再对标识的数据进行预测。
常见算法：
图论推理算法、拉普拉斯支持向量机

----------------------------------------------------------------------------------------------------------------

强化学习
输入数据作为对模型的反馈，不想监督模型那样，输入数据仅仅作为一个检查模型对错的方式，在强化学习下，输入数据直接反馈到模型，模型必须
对立刻做出调整。
应用场景：
动态系统以及机器人控制
常见算法：
Q-Learning、时间差学习

----------------------------------------------------------------------------------------------------------------


SVM算法

1."1-V-R方式"：
如有5个类别，把类别1作为正样本，2、3、4、5则为负样本
K类问题就会有K个分类器
问题：正样本少于负样本（数据集倾斜）

2."1-V-1方式"：
将任意两个构造成一个分类器，则共有（k-1)X(k)/2个分类器

3."有向无环图"：
在训练阶段采用1-V-1,判断阶段采用一种双向无环图的方式，如果类别为K，则只要调用K-1个分类器


一、训练集 vs. 测试集
怎么区分训练集和测试集
1、只有训练集才能用到模型的训练过程中，测试集则必须在模型完成之后才能被采用评估模型优劣的依据
2、训练集中样本数量必须足够多，一般至少大于总样本数的50%
3、两组子集必须从完整集群中均匀取样


二、交叉验证
用来检测分类器的性能的一种统计方法，基本思想是把某种意义下将原始数据进行分组，一部分作为训练集，另一部分作为验证集，首先
对训练集对分类器进行训练，在利用验证集来测试训练得到的模型，以此来做为评价分类器的性能指标。

SVM模型类型枚举
enum { C_SVC, NU_SVC, ONE_CLASS, EPSILON_SVR, NU_SVR };
 C_SVC：C表示惩罚因子，C越大表示对错误分类的惩罚越大
 NU_SVC：和C_SVC相同。
 ONE_CLASS:不需要类标号,用于支持向量的密度估计和聚类.
 EPSILON_SVR:-不敏感损失函数，对样本点来说，存在着一个不为目标函数提供任何损失值的区域，即-带。
 NU_SVR：由于EPSILON_SVR需要事先确定参数，然而在某些情况下选择合适的参数却不是一件容易的事情。而NU_SVR能够自动计算参数。


核函数类型枚举
enum { LINEAR, POLY, RBF, SIGMOID, PRECOMPUTED }; 
 LINEAR：线性核函数（linear kernel）
 POLY:多项式核函数（ploynomial kernel）
 RBF:径向机核函数(radical basis function)
 SIGMOID: 神经元的非线性作用函数核函数(Sigmoid tanh)
 PRECOMPUTED：用户自定义核函数



